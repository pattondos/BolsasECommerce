@model ProyectoFinal_Ecommerce.Models.Productos

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div style="text-align: center;">
        <h3>Datos del nuevo producto</h3>
    </div>
    <hr />
    <div class="form-horizontal col-md-10 col-md-offset-2" style="text-align: center;">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.descripcion, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.descripcion, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.id_categoria, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.id_categoria, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.id_categoria, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.cantidad, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cantidad, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cantidad, "", new { @class = "text-danger" })
            </div>
        </div>

        @{
            List<ProyectoFinal_Ecommerce.Models.Proveedores> proveedores =
                new ProyectoFinal_Ecommerce.Repository.GenericUnitToWork()
                .GetRepositoryInstance<ProyectoFinal_Ecommerce.Models.Proveedores>().GetAllRecords().ToList();

            List<Object> provs = new List<object>();
            foreach (var item in proveedores)
            {
                provs.Add(new { value = item.id, text = item.razon_social });
            }
        }

        <div class="form-group">
            @Html.LabelFor(model => model.id_proveedor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.id_proveedor, new SelectList(
                                                provs,"value","text"), new { @class = "form-control"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.precio_compra, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.precio_compra, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.precio_compra, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.precio_venta, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.precio_venta, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.precio_venta, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.stock, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.stock, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.stock, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.stat, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.stat, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.stat, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.img, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.img, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.img, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.calificacion, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.calificacion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.calificacion, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Agregar producto" class="btn btn-success btn-block" />
            </div>
        </div>
    </div>
}

